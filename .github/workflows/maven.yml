name: GraalVM Native Image builds

on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:
    name: jsipdialer on ${{ matrix.os }}
    runs-on: ${{ matrix.os == 'darwin' && 'macos-latest' || matrix.os == 'linux' && 'ubuntu-latest' || matrix.os == 'windows' && 'windows-latest' }}
    strategy:
      matrix:
        os: [linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: Build with Maven
        run: ./mvnw verify
      - name: Install UPX
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == 'linux' ]]; then
            command -v upx || sudo apt-get update && sudo apt-get install -y upx
          elif [[ "${{ matrix.os }}" == 'darwin' ]]; then
            brew install upx
          elif [[ "${{ matrix.os }}" == 'windows' ]]; then
            choco install upx -y
          fi
      - name: Pack/compress binary
        run: |
           find target/ -type f -executable -exec upx {} +
      - name: Call the binary for test
        run: |
           target/jsipdialer -h || true
      - name: Compress and move files
        run: |
          mkdir -p publish-artifacts
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            tarname="${GITHUB_REF#refs/tags/}_${{ matrix.os }}"
          else
            tarname="${{ matrix.os }}"
          fi
          (cd target && find . -maxdepth 1 -type f -print0 | tar --null -czf "../publish-artifacts/jsipdialer_${tarname}.tar.gz" --files-from=-)
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: publish-artifacts-${{ matrix.os }}
          path: "publish-artifacts/*"

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: "publish-artifacts*/*"
          makeLatest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

